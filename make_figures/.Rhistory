T = run_tests()
fdp[i,"s"] = mean(is_false[S])
fdp[i,"t"] = mean(is_false[T])
fdp[i,"union"] =  mean(c(is_false[S],  is_false[T]))
fdp[i,"num_rejects"] =  length(c(is_false[S],  is_false[T]))
# When there's no discoveries, I count it as false discovery proportion of 0.
fdp[i,is.na(fdp[i, ])] = 0
}
# FDR in union: ~0.16.
colMeans(fdp)
# 10% of hypotheses are true.
# FDR cutoff is set at 10%.
set.seed(0)
is_false = c(rep(1, 900), rep(0, 100))
run_tests = function(){
return(p.adjust(c(runif(900), 0.005*runif(100)), method = "BH")<0.1)
}
# We'll record the false discovery fraction at each of 1000 trials
fdp = data.frame(s=rep(0, 1000), t=rep(0, 1000), union=rep(0, 1000))
for(i in 1:1000){
S = run_tests()
T = run_tests()
fdp[i,"s"] = mean(is_false[S])
fdp[i,"t"] = mean(is_false[T])
fdp[i,"union"] =  mean(c(is_false[S],  is_false[T]))
fdp[i,"num_rejects"] =  length(c(is_false[S],  is_false[T]))
# When there's no discoveries, I count it as false discovery proportion of 0.
fdp[i,is.na(fdp[i, ])] = 0
}
# FDR in union: ~0.16.
colMeans(fdp)
# 10% of hypotheses are true.
# FDR cutoff is set at 10%.
set.seed(0)
is_false = c(rep(1, 900), rep(0, 100))
run_tests = function(){
return(p.adjust(c(runif(900), 0.05*runif(100)), method = "BH")<0.1)
}
# We'll record the false discovery fraction at each of 1000 trials
fdp = data.frame(s=rep(0, 1000), t=rep(0, 1000), union=rep(0, 1000))
for(i in 1:1000){
S = run_tests()
T = run_tests()
fdp[i,"s"] = mean(is_false[S])
fdp[i,"t"] = mean(is_false[T])
fdp[i,"union"] =  mean(c(is_false[S],  is_false[T]))
fdp[i,"num_rejects"] =  length(c(is_false[S],  is_false[T]))
# When there's no discoveries, I count it as false discovery proportion of 0.
fdp[i,is.na(fdp[i, ])] = 0
}
# FDR in union: ~0.16.
colMeans(fdp)
fdp
X = Y=  runif(100)
Z = runif(100)
W = runif(100)
cov(c(X,Z), c(Y,W))
cov(c(X,Z), c(Y,W))
X = Y=  runif(10000)
W = runif(1000)
W = runif(10000)
Z = runif(10000)
cov(c(X,Z), c(Y,W))
cov(c(X,Z[1:10]), c(Y,W[1:10]))
cov(c(X,Z[1:1]), c(Y,W[1:1]))
cov(X,Y)
cov(c(X,Z[1:1]), c(Y,W[1:1]))
cor(c(X,Z), c(Y,W))
cor(c(X,Z[1:100]), c(Y,W[1:100]))
cor(c(X,Z[1:1000]), c(Y,W[1:1000]))
sample(8)
sample(8)
sample(7)
log(e)
log(exp(1))
log(0.7
)
ppois(0, 0.3)
ppois(0, 0.35)
ppois(0, 0.36)
ppois(1, 0.30)
0.7^9
.3^9
choose(9, 4)
8000/choose(9, 4)
8000/choose(9, 3)
0.5^9
0.6^9
1e4*(0.6^9)
1e4*(p^9)
dbinom(0:12, 12, 0.9)
plot(dbinom(0:12, 12, 0.9))
plot(dbinom(0:12, 12, 0.8))
exp(-1.2)
exp(-.36)
plot(dbinom(0:12, 12, 0.7))
plot(dbinom(12, 12, 0.7))
exp(4)
library(ggplot2)
library(dplyr)
library(stringr)
library(arrow)
library(magrittr)
setwd("/home/ekernf01/Desktop/jhu/research/projects/perturbation_prediction/cell_type_knowledge_transfer/perturbation_benchmarking/make_figures/")
collect_experiments = function(experiments){
X <- list()
for (experiment in experiments) {
filepath <- paste0("../experiments/", experiment, "/outputs/evaluationPerPert.parquet")
X[[experiment]] <- arrow::read_parquet(filepath)
X[[experiment]]$question %<>% as.character
X[[experiment]]$refers_to %<>% as.character
}
X <- bind_rows(X)
return(X)
}
X = collect_experiments(c("1.0_1", "1.0_2", "1.0_3", "1.0_5", "1.0_6", "1.4.3_1", "1.4.5_1", "1.4.7_1"))
X$factor_varied
X$factor_varied %<>% factor(levels = c("regression_method", "network_datasets"))
{
X = collect_experiments(c("1.0_1", "1.0_2", "1.0_3", "1.0_5", "1.0_6", "1.4.3_1", "1.4.5_1", "1.4.7_1"))
X$factor_varied %<>% factor(levels = c("regression_method", "network_datasets"))
X$perturbation_dataset %<>% gsub("γ", "g" , .)
X$x = ifelse(X$factor_varied=="regression_method", X$regression_method, X$network_datasets)
X %<>%
group_by(x, perturbation_dataset, factor_varied) %>%
summarise(across(ends_with("benefit"), mean))
ggplot(X) +
geom_boxplot(aes(x = x, y = mae_benefit)) +
facet_grid(perturbation_dataset~factor_varied, scales = "free") +
labs(x = "", y = "Improvement in MAE over mean") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5)) +
geom_hline(aes(yintercept=0, color = "red")) +
theme(legend.position = "none")
ggsave('plots/fig_basics_a.pdf', width = 5, height = 6)
}
{
evaluationPerTarget = arrow::read_parquet("../experiments/1.0_1/outputs/evaluationPerTarget.parquet")
long_data <- evaluationPerTarget %>%
tidyr::gather(var_name, value, c("means", "variances", "variances_norm")) %>%
dplyr::select(regression_method, mae_benefit, property_of_gene = var_name, value) %>%
mutate(value = as.numeric(value)) %>%
na.omit() %>%
group_by(property_of_gene, regression_method) %>%
mutate(value_binned = cut(rank(value), breaks = 5)) %>%
group_by(property_of_gene, regression_method, value_binned) %>%
summarise(value = median(value), mae_benefit = median(mae_benefit)) %>%
ungroup() %>%
select(-value_binned)
ggplot(long_data, aes(x = value, y = mae_benefit, color = regression_method)) +
geom_point() +
geom_line() +
facet_wrap(~ property_of_gene, ncol = 5, scales = "free_x")
ggsave('plots/fig_basics_stratify_targets.pdf', width = 8, height = 2.5)
}
library(ggplot2)
library(dplyr)
library(arrow)
library(magrittr)
setwd("/home/ekernf01/Desktop/jhu/research/projects/perturbation_prediction/cell_type_knowledge_transfer/perturbation_benchmarking/make_figures/")
collect_experiments = function(experiments){
X <- list()
for (experiment in experiments) {
filepath <- paste0("../experiments/", experiment, "/outputs/evaluationPerPert.parquet")
X[[experiment]] <- arrow::read_parquet(filepath)
X[[experiment]]$refers_to %<>% as.character
X[[experiment]]$question %<>% as.character
}
X <- bind_rows(X)
return(X)
}
X = collect_experiments(c("1.6.1_1", "1.6.1_3", "1.6.1_6"))
X <- X %>% mutate(chart_x = paste(regression_method, starting_expression, sep = "_"))
method_tidy = c(
"DCDFG-spectral_radius-mlplr-False"="DCD-FG" ,
"median"  = "median",
"DCDFG-spectral_radius-linearlr-False"="NOTEARS-LR",
"mean"  = "mean"
)
X$regression_method = method_tidy[X$regression_method] %>% factor(levels = c("median", "mean", "NOTEARS-LR", "DCD-FG"))
X$perturbation_dataset %<>% gsub("γ", "g", .)
X %<>%
group_by(regression_method, starting_expression, perturbation_dataset) %>%
summarise(c(mean), pick(ends_with("benefit")))
for (metric in c("mae_benefit")) {
ggplot(X, aes(x = regression_method, y = mae_benefit, fill = starting_expression)) +
geom_boxplot() +
facet_wrap(~perturbation_dataset, scales = "free") +
labs(x = "Method",
y = "MAE improvement over baseline") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
dir.create("plots", showWarnings = FALSE)
ggsave(filename = paste0("plots/fig_dcdfg_", metric, ".pdf"), plot = chart, width = 8, height = 4)
}
ggplot(X, aes(x = regression_method, y = mae_benefit, fill = starting_expression)) +
geom_boxplot() +
facet_wrap(~perturbation_dataset, scales = "free") +
labs(x = "Method",
y = "MAE improvement over baseline") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
X %<>%
group_by(regression_method, starting_expression, perturbation_dataset) %>%
summarise(c(mean), pick(ends_with("benefit")))
X %<>%
group_by(regression_method, starting_expression, perturbation_dataset) %>%
summarise(across(ends_with("benefit"), mean))
for (metric in c("mae_benefit")) {
ggplot(X, aes(x = regression_method, y = mae_benefit, fill = starting_expression)) +
geom_boxplot() +
facet_wrap(~perturbation_dataset, scales = "free") +
labs(x = "Method",
y = "MAE improvement over baseline") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
dir.create("plots", showWarnings = FALSE)
ggsave(filename = paste0("plots/fig_dcdfg_", metric, ".pdf"), plot = chart, width = 8, height = 4)
}
ggplot(X, aes(x = regression_method, y = mae_benefit, fill = starting_expression)) +
geom_boxplot() +
facet_wrap(~perturbation_dataset, scales = "free") +
labs(x = "Method",
y = "MAE improvement over baseline") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(X, aes(x = regression_method, y = mae_benefit, fill = starting_expression, color = starting_expression)) +
geom_boxplot() +
facet_wrap(~perturbation_dataset, scales = "free") +
labs(x = "Method",
y = "MAE improvement over baseline") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(X, aes(x = regression_method, y = mae_benefit, fill = starting_expression, color = starting_expression)) +
geom_point() +
facet_wrap(~perturbation_dataset, scales = "free") +
labs(x = "Method",
y = "MAE improvement over baseline") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(X, aes(x = regression_method, y = mae_benefit, fill = starting_expression, color = starting_expression)) +
geom_line() +
facet_wrap(~perturbation_dataset, scales = "free") +
labs(x = "Method",
y = "MAE improvement over baseline") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(X, aes(x = regression_method, y = mae_benefit, fill = starting_expression, color = starting_expression)) +
geom_point() +
facet_wrap(~perturbation_dataset, scales = "free") +
labs(x = "Method",
y = "MAE improvement over baseline") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
for (metric in c("mae_benefit")) {
ggplot(X, aes(x = regression_method, y = mae_benefit, fill = starting_expression, color = starting_expression)) +
geom_point() +
facet_wrap(~perturbation_dataset, scales = "free") +
labs(x = "Method",
y = "MAE improvement over baseline") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
dir.create("plots", showWarnings = FALSE)
ggsave(filename = paste0("plots/fig_dcdfg_", metric, ".pdf"), width = 8, height = 4)
}
# Figure <gears>
X = collect_experiments(c("1.4.2_1","1.4.2_2","1.4.2_3","1.4.2_5","1.4.2_6"))
X["chart_x"] = paste0(X["regression_method"], "_using_", X["eligible_regulators"])
for(metric in c("mae", "mse_top_20")){
ggplot(X) +
geom_point(aes_(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction)
}
ggsave(paste0('plots/fig_gears_', metric, '.pdf'), width = 10, height = 5)
ggplot(X) +
geom_point(aes_string(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction)
X = collect_experiments(c("1.4.2_1","1.4.2_2","1.4.2_3","1.4.2_5","1.4.2_6"))
X %<>%
group_by(regression_method, eligible_regulators) %>%
summarise(across(ends_with("benefit"), mean))
X["chart_x"] = paste0(X["regression_method"], "_using_", X["eligible_regulators"])
ggplot(X) +
geom_point(aes_string(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction)
X %<>%
group_by(regression_method, eligible_regulators, perturbation_dataset) %>%
summarise(across(ends_with("benefit"), mean))
X["chart_x"] = paste0(X["regression_method"], "_using_", X["eligible_regulators"])
for(metric in c("mae_benefit")){
ggplot(X) +
geom_point(aes_string(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction)
}
ggplot(X) +
geom_point(aes_string(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction)
X = collect_experiments(c("1.4.2_1","1.4.2_2","1.4.2_3","1.4.2_5","1.4.2_6"))
X %<>%
group_by(regression_method, eligible_regulators, perturbation_dataset) %>%
summarise(across(ends_with("benefit"), mean))
X["chart_x"] = paste0(X["regression_method"], "_using_", X["eligible_regulators"])
ggplot(X) +
geom_point(aes_string(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction)
X %<>%
group_by(regression_method, eligible_regulators, perturbation_dataset, desired_heldout_fraction) %>%
summarise(across(ends_with("benefit"), mean))
X["chart_x"] = paste0(X["regression_method"], "_using_", X["eligible_regulators"])
ggplot(X) +
geom_point(aes_string(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction)
X = collect_experiments(c("1.4.2_1","1.4.2_2","1.4.2_3","1.4.2_5","1.4.2_6"))
X %<>%
group_by(regression_method, eligible_regulators, perturbation_dataset, desired_heldout_fraction) %>%
summarise(across(ends_with("benefit"), mean))
X["chart_x"] = paste0(X["regression_method"], "_using_", X["eligible_regulators"])
ggplot(X) +
geom_point(aes_string(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction)
ggplot(X) +
geom_point(aes_string(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
X = collect_experiments(c("1.4.2_1","1.4.2_2","1.4.2_3","1.4.2_5","1.4.2_6"))
head(X)
head(X) %>% t
X["chart_x"] = paste0(X["regression_method"], "_using_", X["eligible_regulators"])
X["chart_x"]
X %<>%
group_by(regression_method, eligible_regulators, perturbation_dataset, desired_heldout_fraction) %>%
summarise(across(ends_with("benefit"), mean))
X["chart_x"] = paste0(X["regression_method"], "_using_", X["eligible_regulators"])
X["chart_x"]
X["regression_method"]
X["chart_x"] = paste0(X[["regression_method"]], "_using_", X[["eligible_regulators"]])
ggplot(X) +
geom_point(aes_string(x = "chart_x",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric ,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(perturbation_dataset~desired_heldout_fraction) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='Method and gene-set for GO graph',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='Method',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
for(metric in c("mae")){
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
}
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
for(metric in c("mae_benefit")){
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
}
for(metric in c("mae_benefit")){
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
}
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
X$desired_heldout_fraction %<>%
multiply_by(100) %>%
paste0("Held-out percent: ", .)
for(metric in c("mae_benefit")){
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
}
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
X$desired_heldout_fraction %<>%
multiply_by(100) %>%
paste0("Held-out : ", ., "%")
X = collect_experiments(c("1.4.2_1","1.4.2_2","1.4.2_3","1.4.2_5","1.4.2_6"))
X %<>%
group_by(regression_method, eligible_regulators, perturbation_dataset, desired_heldout_fraction) %>%
summarise(across(ends_with("benefit"), mean))
X$desired_heldout_fraction %<>%
multiply_by(100) %>%
paste0("Held-out : ", ., "%")
for(metric in c("mae_benefit")){
ggplot(X) +
geom_point(aes_string(x = "regression_method",
y = metric,
color='eligible_regulators')) +
labs(x='',
y = "MAE improvement over baseline",
color='Eligible regulators') +
facet_grid(desired_heldout_fraction~perturbation_dataset) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
}
ggsave(paste0('plots/fig_gears_', metric, '.pdf'), width = 10, height = 5)
